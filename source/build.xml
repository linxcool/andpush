<?xml version="1.0" encoding="UTF-8"?>
<project name="push" default="release">

    <property file="local.properties" />
    <property file="ant.properties" />
    <property environment="env" />
    
    <loadproperties srcFile="project.properties" />
    
    <import file="custom_rules.xml" optional="true" />
    <import file="${sdk.dir}/tools/ant/build.xml" />

    <property name="lib.android" value="${sdk.dir}\platforms\${target}\android.jar"/>
    <property name="lib.proguard" value="${sdk.dir}\tools\proguard\lib\proguard.jar"/>
    <property name="lib.kernel" value="E:\java\workspace\push\libs\com.linxcool.sdk_v1.0.1_release.jar"/>
    
    <!-- 使用到的命令(当前系统为windows,如果系统为linux,可将.bat文件替换成相对应的命令) -->  
    <property name="dx" value="${sdk.dir}\build-tools\android-4.4.2\dx.bat" />
    
    <!-- 声明依赖的jar -->
    <path id="dependencies">  
        <fileset dir="E:\java\workspace\">  
            <include name="aires/libs/*.jar"/>
        </fileset>  
    </path> 
    
    <property name="lib.tmp" value="${lib.jar}.tmp.jar"/>
    <property name="plg.tmp" value="${plg.jar}.tmp.jar"/>
    <property name="plg.opt" value="${plg.jar}.opt.jar"/>
    
    <!-- 拆分出lib-java文件 -->
    <target name="separate_lib">  
        <echo message="The base dir is: ${basedir}"/>
        <echo message="The lib ver is: ${lib.ver}"/>
        <echo message="The plg ver is: ${plg.ver}"/>
        
        <delete dir="${lib.src}" />
        <mkdir dir="${lib.src}" />    
		<copy todir="${lib.src}">
			<fileset dir="${basedir}/src"> 
				<include name="com/linxcool/push/*.java" /> 
			</fileset> 
		</copy>
    </target>
    
    <!-- 拆分出plg-java文件 -->
    <target name="separate_plg">  
        <delete dir="${plg.src}" />
        <mkdir dir="${plg.src}" />    
		<copy todir="${plg.src}">
			<fileset dir="${basedir}/src"> 
				<include name="com/linxcool/push/*/*.java" />
				<include name="com/linxcool/push/*/*/*.java" />
			</fileset> 
		</copy>
    </target>
    
    <!-- 编译lib-class文件 -->
    <target name="compile_lib" depends="separate_lib">  
        <delete dir="${lib.cls}" />
        <mkdir dir="${lib.cls}" />
        
        <javac encoding="UTF-8" target="1.6" debug="false" extdirs=""  
                srcdir="${lib.src}"  
                destdir="${lib.cls}"  
                includeAntRuntime = "false"
                bootclasspath="${lib.android}"> 
        	<classpath refid="dependencies" />
        </javac>
        
        <delete file="${lib.jar}"/>
        <jar destfile="${lib.jar}">
            <fileset dir="${lib.cls}" includes="**/*.class"/>
        </jar>
    </target>  
    
    <!-- 编译plg-class文件 -->
    <target name="compile_plg" depends="separate_plg">  
        <delete dir="${plg.cls}" />
        <mkdir dir="${plg.cls}" />
        
        <javac encoding="UTF-8" target="1.6" debug="false" extdirs=""  
                srcdir="${plg.src}"  
                destdir="${plg.cls}"  
                includeAntRuntime = "false"
                bootclasspath="${lib.android}"> 
        	<classpath refid="dependencies" />
        </javac>
        
    </target> 
    
    <!-- 混淆class-plg文件 -->
    <target name="optimize_plg" depends="compile_plg">
        <delete file="${plg.tmp}"/>  
        <jar destfile="${plg.tmp}">
       		<fileset dir="${plg.cls}" includes="**/*.class"/>
       	</jar>
	    
        <delete file="${plg.opt}"/>
        <java jar="${lib.proguard}" fork="true" failonerror="true">  
            <jvmarg value="-Dmaximum.inlined.code.length=32"/>  
            <arg value="-injars ${plg.tmp}"/>
            <arg value="-outjars ${plg.opt}"/>

            <arg value="-libraryjars ${lib.android}"/>  
            <arg value="-libraryjars ${lib.kernel}"/>  
            
            <arg value="-dontpreverify"/>  
            <arg value="-dontoptimize"/>  
            <arg value="-dontusemixedcaseclassnames"/>  
            <arg value="-allowaccessmodification"/>  
            <arg value="-optimizationpasses 7"/>  
            <arg value="-verbose"/>  
            <arg value="-dontskipnonpubliclibraryclasses"/>  
            <arg value="-dontskipnonpubliclibraryclassmembers"/>
            
            <!-- 在这里添加混淆配置 -->
            <arg value="-keep public class com.linxcool.push.PushSdk{public &lt;methods&gt;;}"/>
        
        	<!-- 
            <arg value="-keep public class com.linxcool.aires.core.IBinderHandler{public &lt;fields&gt;;&lt;methods&gt;;}"/>
            <arg value="-keep public class com.linxcool.aires.*.*{*;}"/> 
            <arg value="-keep public class com.linxcool.aires.*.*.*{*;}"/> 
            <arg value="-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod"/> 
             -->
        </java>  
        
        <delete file="${plg.jar}"/>
        <jar destfile="${plg.jar}">
            <zipfileset src="${plg.opt}"/>
        </jar>
    </target>
    
    <!-- 对插件进行dex操作并压缩成jar -->
    <target name="dex_plg" depends="optimize_plg">
        <delete file="${plg.cdx}"/>
        <exec executable="${dx}" failonerror="true">  
            <arg value="--dex" />  
            <arg value="--output=${plg.cdx}" />  
            <arg value="${plg.jar}" />  
            <arg value="${basedir}/libs" />
        </exec >
        
        <delete file="${plg.dex}"/>
		<jar destfile="${plg.dex}">
            <fileset dir="${basedir}/bld">  
		        <include name="**/*.dex" />
		    </fileset>
        </jar>
	</target>
	
    <target name="signed_plg" depends="dex_plg">
        <delete file="${signed_out}"/>
        <java jar="${signed_util}" fork="true" failonerror="true">  
		   <jvmarg value="-Dmaximum.inlined.code.length=32"/>  
		   <arg value="${plg.dex}"/>  
           <arg value="${signed_name}"/>  
           <arg value="${signed_ver}"/>  
           <arg value="${signed_cls}"/>  
           <arg value="${signed_out}"/>  
		</java>
    </target>
    
    <target name="release" depends="compile_lib, signed_plg">
        <delete dir="${code_src}"/>
        <delete dir="${code_cls}"/>
        <delete file="${plg.tmp}"/>
        <delete file="${plg.opt}"/>
        <delete file="${plg.cdx}"/>
        
        <delete file="${file_release}"/>
         <jar destfile="${file_release}">
            <zipfileset src="${lib.jar}"/>
            <zipfileset dir="${basedir}/bld" prefix="assets">
			    <include name="${signed_name}.jar"/>
			</zipfileset>
        </jar>
    </target>
</project>
